# Files
requirements-d2.txt
PRIVATE_DATA.yaml
LeafMachine2_TRAINING_ONLY.yaml
LeafMachine2_TEMPLATE.yaml
LeafMachine2_WW.yaml


# Dirs
data/
wandb/
venv_LM2_linux/
venv_LM2_l/
venv_LM2_310/
venv_LM2_38/
venv_LM2/
tests/
.vscode/

leafmachine2/*/.gitignore

/bin/*
!/bin/version.yml

leafmachine2/machine/ruler_classifier/
leafmachine2/machine/wandb/
leafmachine2/machine/DocEnTR/model_zoo/
leafmachine2/machine/DocEnTR/git_images/
leafmachine2/machine/DocEnTR/demo/
leafmachine2/machine/DocEnTR/.git/
leafmachine2/machine/DocEnTR/__pycache__

leafmachine2/release_manager/

leafmachine2/segmentation/wandb/
leafmachine2/segmentation/models/
leafmachine2/segmentation/detectron2/detectron2/model_zoo/configs
leafmachine2/segmentation/detectron2/datasets/*
leafmachine2/segmentation/detectron2/models
leafmachine2/segmentation/detectron2/.gitignore
!/leafmachine2/segmentation/detectron2/models/*/cfg_output.yaml

leafmachine2/component_detector/datasets/
leafmachine2/component_detector/wandb/
leafmachine2/component_detector/runs/
leafmachine2/component_detector/architecture/
leafmachine2/component_detector/yolov5x6.pt





# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
venv_LM2/
venv_LM2_linux/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
